系统原理
=======
    :批处理: 现代操作系统的前身
    :系统调用:
        :kernel: 操作系统核心

            - 管理硬件资源
                - 将硬件资源虚拟后通过系统调用提供给上层需要运行的应用程序
            - 进程管理
            - 内存管理
            - 文件系统
            - 网络功能
            - 硬件驱动
            - 安全机制
    :库调用:
        :library:
            - 一种没有执行入口，不能自我独立运行，只能被其它程序调用时才能运行的应用程序
            - 操作系统的应用编程接口
                - 把不同应用依赖的重复相同的功能做成公用的较为高层的接口，避免浪费资源
    ========  ===========
    库调用       编程更简单
    系统调用     运行速度更快、效率更高、权限更大
    ========  ===========

    =======  ======  ======================  ===========
    Windows    .dll    Dynamic Link Library    动态链接库
    Linux      .so     shared object           共享对象
    =======  ======  ======================  ===========


帮助
----
    :``help xxx``:    列出（内部）命令用法
    :``xxx --help``:  列出（外部）命令用法
    :``man xxx``:     打开帮助手册/查看文件

        -a  在所有帮助手册中搜索
        -f  显示给定关键字的简短描述信息 == ``whatis xxx``
        -P  指定内容时使用分页程序
        -M  指定搜索手册的路径
    :``type xxx``:    显示命令类型


补全
----
    :Tab:      补全当前路径下文件或文件夹
    :Tab, Tab: 列出当前路径下所有文件或文件夹


Linux 原则
----------
    1. 自由开源
    #. 组合目的单一的小程序完成复杂任务
    #. 一切皆文件
    #. 尽量避免捕获用户接口，尽量少与用户交互
    #. 配置文件保存为纯文本格式

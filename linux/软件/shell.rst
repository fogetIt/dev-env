wget
----
    -O xxx  save with file name


$
- $!
    + Shell最后运行的后台Process的PID
- $?
    + 上一条命令返回码
        * 0，成功
    + 函数的返回值
- $#
    + 传递给函数的参数个数
- $*
    + 所有传递给函数的参数
    + 可以接收带空格的参数
- ${@:1}
    + 接收带空格的参数
- $@
    + 与$*相同，但是略有区别
- $n
    + 传递参数给函数
    + 当n>=10时，需要使用${n}来获取参数



##### if [ expression ]
```bash
: "表达式中每个变量、符号之间必须有空格"
if [[ -d ... ]]      # 判断目录是否存在(相对路径不能加"")
if [[ -f ... ]]      # 判断文件是否存在(相对路径不能加"")
if [[ a -gt b ]]     # 比较整数(变量名必须加引号)
if [[ a > b ]]       # 比较非整数(变量名必须加引号)
if [[ "$1" ... ]]    # $变量必须加引号(否则传入参数为空时，报错)
elif [[ $1 ... ]]    # $变量不必加引号
if [[ expression ]]  # 支持&&,||,<,>,!=，$!不用加引号
```


##### 符号
```bash
[]   # bash 的内部命令
     # 和 test 等同
     # [ 调用 test 命令
     # ] 关闭条件判断
     # 可用的比较运算符只有 ==/!= ，用于字符串比较的，不可用于整数比较
[[]] # 关键字
     # 兼容 &&,||,<,>
     # 双中括号中的表达式看作一个单独的元素，并返回一个退出状态码
()   # 新开一个子shell顺序执行
     # 括号中的变量不能够被脚本余下的部分使用
```
http://blog.csdn.net/taiyang1987912/article/details/39551385


##### 环境变量
```bash
set    # 显示当前shell的变量，包括当前用户的变量
env    # 显示当前用户的变量
export # 显示当前导出成用户变量的shell变量
# 修改环境变量
export ***          # 立即生效，用户注销时值将丢失
subl /etc/profile   # 重启生效
source /etc/profile # 立即生效
```

##### 命令间隔符
```shell
set -e
: "如果任何语句的执行结果不是true则应该退出"
: "某些命令执行失败，脚本会退出，$?判断也会失效"
command1 & command2 & ...   # 同时执行
command1; command2; ...     # 顺序执行，互不影响
command1 && command2 && ... # 顺序执行，后面的命令依赖前面命令的成功($? == 0)
command1 || command2 || ... # 顺序执行，后面的命令依赖前面命令的失败
```

##### GIMP


# echo -e '...'
# 显示颜色、换行
文件权限
-------
:ll 第 2~10 字段:
    :第 2~4 字段:  所属用户的权限
    :第 5~7 字段:  所属组用户的权限
    :第 7~10 字段: 其它用户的权限


修改文件权限
----------
:chmod xxx/xxx:

    -R  递归
    -f  禁止所有错误报告

    - 受权者
        :``u``: 属主
        :``g``: 属组
        :``o``: 其他
        :``a``: 所有
    - 动作
        :``+``: 增加权限
        :``-``: 取消权限
        :``=``: 覆盖权限

            :``=u``: 与文件属主一样的权限
            :``=g``: 与文件属组用户一样的权限
            :``=o``: 与其他用户一样的权限
    - 权限类型
        :r(ead):
            - 4
            - 文件可读、可复制
            - 目录可 ``ll``
        :w(rite):
            - 2
            - 文件可写、可删除、可移动
            - 目录可修改、可创建
        :(e)x(ecute):
            - 1
            - 文件可执行
            - 目录可进入
        :``_``:
            - 0
            - 没有权限
        :s(et user id): suid 权限
:chmod 7,7,7 xxx/xxx:
- 只有文件主和超级用户才可以便用该命令
**root 不受读写权限限制**


修改文件所属
-----------
:``chown xxx[:xxx] xxx/xxx xxx/xxx``:
    -v  显示执行过程
    -c  显示修改的部分
    -f  不显示错误信息
    -R  递归处理
    - 只有文件主和超级用户才可以便用该命令


修改文件组信息
------------

:chgrp xxx xxx/xxx xxx/xxx:
    -v  显示执行过程
    -c  显示修改的部分
    -f  不显示错误信息
    -R  递归处理
    - 只有文件主和超级用户才可以便用该命令


二进制文件权限
------------

:s(et user id):  调用者在 ``程序执行的过程中`` 暂时获得该文件的 ``拥有者`` 的权限
:s(et group id): 调用者在 ``程序执行的过程中`` 暂时获得该文件的 ``拥有组`` 的权限


权限掩码
-------

:umask: 显示当前的掩码（数字）

    - 默认是 0022
        :第 1 个 0: suid（特殊权限使用）丢弃的权限
        :第 2 个 0: 拥有者的权限掩码

            :拥有者的默认权限: 7-0=7 -> rwx
        :第 1 个 2: 拥有组的权限掩码

            :拥有组的默认权限: 7-2=5 -> r_x
        :第 2 个 2: 其他用户的权限掩码

            :其他人默认权限: 7-2=5 -> r_x
:umask -S: 显示当前的掩码（符号）

- 文件的默认权限是没有 x 的，即文件的最大默认权限为 666
- 由于进入目录和目录的 x 权限有关，故目录的最大默认权限为 777

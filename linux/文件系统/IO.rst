标准输入、输出
============
    :``\``:  转义符
    :``|``:  管道符，连续处理（将前一个处理结果传递到后边）

        - 不能处理文件
    :``>``:  定向输出到文件（覆盖写，文件不存在，自动创建）
    :``>>``: 定向输出到文件（追加写，文件不存在，自动创建）
    :``<``:  从文件定向输入到终端（覆盖写，文件不存在，自动创建）
    :``<<``: 从文件定向输入到终端（追加写，文件不存在，自动创建）
    :命令执行结果:
        :``0``: :stdin:  标准输入
        :``1``: :stdout: 标准输出
        :``2``: :stderr: 错误输出
        :``&``:  所有输出（标准输出、错误输出）
        :``&1``: 标准输出的引用
        :``&2``: 错误输出的引用
        :``1>xxx``:  定向标准输出覆盖到某处
        :``1>>xxx``: 定向标准输出追加到某处
        :``2>xxx``:  定向错误输出覆盖到某处
        :``2>>xxx``: 定向错误输出追加到某处
        :``xxx>xxx 2>&1``: 把命令的标准输出定向到某处，同时把错误输出也定向到某处

            - 因为 ``&1`` 是定向标准输出的引用，所以只用打开一次文件


tee
----
    :tee:         输出到标准输出
    :tee xxx/xxx: 输出到文件（如果文件不存在，则创建）

        -a      追加模式
        ``-``   输出两次
